namespace AltV.Community.MValueAdapters.Generators.Constants;

internal static class Attributes
{
    internal const string MValueAdapterAttributeName = "MValueAdapterAttribute";
    internal const string MValueIgnoreAttributeName = "MValueIgnoreAttribute";
    internal const string MValuePropertyNameAttributeName = "MValuePropertyNameAttribute";

    internal const string FileTemplate = $@"// <auto-generated>
//     Automatically generated.
//     Changes made to this file may be lost and may cause undesirable behaviour.
// </auto-generated>

namespace AltV.Community.MValueAdapters.Generators;

/// <summary>
/// Indicates that a MValue adapter should be generated for the associated class by the source generator.
/// </summary>
[System.AttributeUsage(System.AttributeTargets.Class, Inherited = false)]
public sealed class {MValueAdapterAttributeName} : System.Attribute {{ }}

/// <summary>
/// Specifies that the associated property or field should be excluded from serialization and deserialization.
/// </summary>
[System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field)]
public sealed class {MValueIgnoreAttributeName} : System.Attribute {{ }}

/// <summary>
/// Specifies an alternative name for serialization and deserialization of the associated property or field.
/// </summary>
[System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field)]
public sealed class {MValuePropertyNameAttributeName} : System.Attribute
{{
    /// <summary>
    /// Gets the alternative name used for serialization and deserialization.
    /// </summary>
    public readonly string PropertyName;
    
    /// <summary>
    /// Initializes a new instance of the <see cref=""MValuePropertyNameAttribute""/> class with the specified property name.
    /// </summary>
    /// <param name=""propertyName"">The alternative name used for serialization and deserialization.</param>
    public {MValuePropertyNameAttributeName}(string propertyName)
    {{
        PropertyName = propertyName;
    }}
}}
";
}
